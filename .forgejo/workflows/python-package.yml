name: Python package

on:
  push:
    branches: [ "main" ]
    paths: [ "src/**", "pyproject.toml", ".forgejo/workflows/python-package.yml" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "src/**", "pyproject.toml" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Mirror commit running status to GitHub
      if: ${{ forge.event_name == 'push' }}
      continue-on-error: true
      run: |
        curl -L -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.SCALPYL_GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/hexadecimalDinosaur/scalpyl/statuses/${{ forge.event.after }} \
          -d '{"state":"pending", "target_url":"${{ forge.server_url }}/${{ forge.repository }}/actions/runs/${{ forge.run_number }}/jobs/${{ forge.action }}", "context":"Codeberg Forgejo Actions", "description":"test (${{ matrix.python-version }})"}'
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest setuptools build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install modules
      run: python -m pip install .
    - name: Test with pytest
      run: |
        pytest
    - name: Build package
      run: |
        python -m build
    - name: Upload commit distributions
      uses: forgejo/upload-artifact@v4
      with:
        name: commit-${{ forge.event.after }}-dists-python-${{ matrix.python-version }}
        path: dist/
      if: ${{ forge.event_name == 'push' }}
    - name: Upload PR distributions
      uses: forgejo/upload-artifact@v4
      with:
        name: pr-${{ forge.event.number }}-dists-python-${{ matrix.python-version }}
        path: dist/
      if: ${{ forge.event_name == 'pull_request' }}
    - name: Mirror commit success status to GitHub
      if: forge.event_name == 'push' && success()
      continue-on-error: true
      run: |
        curl -L -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.SCALPYL_GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/hexadecimalDinosaur/scalpyl/statuses/$FORGEJO_SHA" \
          -d '{"state":"success", "target_url":"${{ forge.server_url }}/${{ forge.repository }}/actions/runs/${{ forge.run_number }}/jobs/${{ forge.action }}", "context":"Codeberg Forgejo Actions", "description":"test (${{ matrix.python-version }})"}'
        - name: Mirror commit success status to GitHub
    - name: Mirror commit failure status to GitHub
      if: forge.event_name == 'push' && failure()
      continue-on-error: true
      run: |
        curl -L -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.SCALPYL_GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/hexadecimalDinosaur/scalpyl/statuses/$FORGEJO_SHA" \
          -d '{"state":"failure", "target_url":"${{ forge.server_url }}/${{ forge.repository }}/actions/runs/${{ forge.run_number }}/jobs/${{ forge.action }}", "context":"Codeberg Forgejo Actions", "description":"test (${{ matrix.python-version }})"}'
